/********************************************************************************
*                                                                               *
*                            User handed message box                            *
*                                                                               *
*********************************************************************************
* Copyright (C) 2005 by Niall Douglas.   All Rights Reserved.                   *
*       NOTE THAT I DO NOT PERMIT ANY OF MY CODE TO BE PROMOTED TO THE GPL      *
*********************************************************************************
* This code is free software; you can redistribute it and/or modify it under    *
* the terms of the GNU Library General Public License v2.1 as published by the  *
* Free Software Foundation EXCEPT that clause 3 does not apply ie; you may not  *
* "upgrade" this code to the GPL without my prior written permission.           *
* Please consult the file "License_Addendum2.txt" accompanying this file.       *
*                                                                               *
* This code is distributed in the hope that it will be useful,                  *
* but WITHOUT ANY WARRANTY; without even the implied warranty of                *
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                          *
*********************************************************************************
* $Id:                                                                          *
********************************************************************************/

#include "fxdefs.h"
#include "FXApp.h"
#include "FXHandedMsgBox.h"
#include "FXVerticalFrame.h"
#include "FXHorizontalFrame.h"
#include "FXGIFIcon.h"
#include "FXText.h"
#include "FXPrimaryButton.h"
#include "FXProcess.h"
#include "FXTrans.h"
#include "FXIODevice.h"
#include "FXRollback.h"
#include <stdlib.h>
#include <string.h>
#ifdef BUILDING_TCOMMON
#include "FXPNGIcon.h"
#include "FXFile.h"
#endif
#include "FXMemDbg.h"
#if defined(DEBUG) && defined(FXMEMDBG_H)
static const char *_fxmemdbg_current_file_ = __FILE__;
#endif

namespace FX {

// Map
FXDEFMAP(FXHandedMsgBox) FXHandedMsgBoxMap[]={
	FXMAPFUNC(SEL_COMMAND, FXHandedMsgBox::ID_ACCEPT, FXHandedMsgBox::onCmdClicked),
	FXMAPFUNC(SEL_COMMAND, FXHandedMsgBox::ID_CANCEL, FXHandedMsgBox::onCmdClicked),
	FXMAPFUNC(SEL_COMMAND, FXHandedMsgBox::ID_RETRY,  FXHandedMsgBox::onCmdClicked)
};


// Object implementation
FXIMPLEMENT(FXHandedMsgBox,FXHandedDialog,FXHandedMsgBoxMap,ARRAYNUMBER(FXHandedMsgBoxMap))

struct FXHandedMsgBoxPrivate
{
	const FXIcon *icon;
	FXText *text;
	FXHandedMsgBoxPrivate(const FXIcon *ic) : icon(ic), text(0) { }
};

long FXHandedMsgBox::onCmdClicked(FXObject *sender, FXSelector sel, void *ptr)
{
	getApp()->stopModal(this, FXSELID(sel));
	hide();
	return 1;
}

FXHandedMsgBox::FXHandedMsgBox(FXApp *a, const FXString &caption, const FXString &text, const FXIcon *icon,FXuint opts,FXint x,FXint y,FXint w,FXint h,FXint pl,FXint pr,FXint pt,FXint pb,FXint hs,FXint vs)
	: FXHandedDialog(a, caption, opts,x,y,w,h,pl,pr,pt,pb,hs,vs), p(0)
{
	init(text, icon);
}

FXHandedMsgBox::FXHandedMsgBox(FXWindow *owner, const FXString &caption, const FXString &text, const FXIcon *icon,FXuint opts,FXint x,FXint y,FXint w,FXint h,FXint pl,FXint pr,FXint pt,FXint pb,FXint hs,FXint vs)
	: FXHandedDialog(owner, caption, opts,x,y,w,h,pl,pr,pt,pb,hs,vs), p(0)
{
	init(text, icon);
}

void FXHandedMsgBox::init(const FXString &text, const FXIcon *icon)
{
	FXRBOp unconstr=FXRBConstruct(this);
	FXERRHM(p=new FXHandedMsgBoxPrivate(icon));
	setHelpTag(tr("This is a window either informing you of something or asking you a question"));
	FXVerticalFrame *top;
	FXHorizontalFrame *top2;
	FXERRHM(top= new FXVerticalFrame(this, FRAME_RIDGE|LAYOUT_FILL));

	FXERRHM(top2=new FXHorizontalFrame(top, LAYOUT_FILL, 0,0,0,0, 0,0,0,0, 0,0));
	if(icon) { FXERRHM(new FXLabel(top2, FXString(), const_cast<FXIcon *>(icon))); }

	FXERRHM(p->text=new FXText(top2, NULL, 0, TEXT_READONLY|TEXT_WORDWRAP|LAYOUT_FILL));
	p->text->setBackColor(getBackColor());
	p->text->setText(text);

	if(options & HANDEDMSGBOX_RETRYBUTTON)
	{
		FXPrimaryButton *rb=0;
		FXERRHM(rb=new FXPrimaryButton(buttonWell(), tr("&Retry"), NULL, this, ID_RETRY));
		rb->setHelpTag(tr("Press to attempt to retry the operation"));
	}

	unconstr.dismiss();
}

FXHandedMsgBox::~FXHandedMsgBox()
{ FXEXCEPTIONDESTRUCT1 {
	FXDELETE(p);
} FXEXCEPTIONDESTRUCT2; }

FXString FXHandedMsgBox::text() const
{
	return p->text->getText();
}
void FXHandedMsgBox::setText(const FXString &text)
{
	p->text->setText(text);
}

FXuint FXHandedMsgBox::execute(FXuint placement)
{
	create();
	show(placement);
	switch(getApp()->runModalFor(this))
	{
	case ID_CANCEL:
		return 0;
	case ID_ACCEPT:
		return 1;
	case ID_RETRY:
		return 2;
	}
	return 0;
}


#ifndef BUILDING_TCOMMON
/* Generated by reswrap from file FatalErrorIcon.gif */
const unsigned char FatalErrorIcon[]={
  0x47,0x49,0x46,0x38,0x39,0x61,0x2a,0x00,0x28,0x00,0xb3,0x00,0x00,0xff,0xff,0xff,
  0xff,0xff,0xff,0xde,0x00,0x00,0xff,0x84,0x84,0xbd,0xbd,0xbd,0x9c,0x9c,0x9c,0x73,
  0x73,0x73,0xde,0xde,0xde,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0xf9,0x04,
  0x01,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x2a,0x00,0x28,0x00,0x00,0x04,
  0xfe,0x10,0xc8,0x49,0xeb,0x0c,0x38,0xdb,0xcd,0x7b,0xcd,0xc3,0xa0,0x79,0x24,0x99,
  0x09,0xa8,0x30,0x96,0x2c,0x85,0x0d,0x69,0x2a,0x06,0x6d,0x0d,0x60,0x71,0x8c,0xd9,
  0xec,0x9b,0xe2,0xa8,0x19,0xcf,0x14,0x90,0xf9,0x50,0xbb,0x21,0xe7,0xa8,0x3a,0x05,
  0x93,0xca,0x4f,0xf1,0x09,0xfa,0xd1,0xa2,0xae,0x00,0x0c,0x99,0x01,0x0a,0x84,0x58,
  0x89,0x77,0xd6,0xdd,0x36,0xc3,0x37,0xad,0xb5,0x3b,0x86,0x2a,0xdb,0x6c,0xa6,0x9b,
  0x27,0x8f,0x3b,0xbf,0xf3,0x1a,0xdc,0xae,0xe6,0xbe,0xfb,0x4d,0x7c,0x70,0x43,0x6d,
  0x07,0x86,0x07,0x04,0x06,0x04,0x05,0x06,0x05,0x80,0x79,0x44,0x66,0x01,0x88,0x04,
  0x95,0x05,0x8b,0x06,0x99,0x8e,0x46,0x57,0x2d,0x63,0x87,0x8b,0x05,0x8c,0x8d,0xa2,
  0x99,0x92,0x9d,0x25,0x72,0x05,0x94,0x97,0x8c,0xa3,0xad,0x53,0x78,0xa8,0x1e,0x6d,
  0xa1,0x07,0x97,0x8a,0x99,0xba,0x06,0x8f,0xb3,0x4b,0xbd,0x5d,0x86,0xad,0x04,0x71,
  0x9c,0xa9,0xb1,0x64,0xc1,0xa5,0x76,0xa7,0x91,0x6b,0x6c,0x94,0xc4,0x76,0xc6,0x1d,
  0x7b,0x19,0x86,0x96,0xae,0x71,0xcd,0xbf,0xa7,0xca,0xd8,0xa5,0x8c,0xc5,0x54,0xbf,
  0x9c,0xd0,0x97,0x89,0x8d,0xbc,0xdb,0x56,0x1b,0x75,0x82,0xb7,0x82,0x83,0x52,0xe6,
  0x7c,0x95,0xf2,0xbd,0x52,0xde,0x82,0xf7,0xf8,0xd4,0x62,0xc8,0xf0,0x05,0x58,0x24,
  0x90,0x5b,0x9a,0x7d,0x7c,0x58,0x09,0xa4,0x66,0xcd,0x5e,0xa8,0x82,0xed,0xde,0x39,
  0x14,0x95,0x48,0x9c,0xbc,0x7a,0x3a,0x04,0x6a,0xec,0x92,0xd1,0x4b,0x8e,0x8f,0x1c,
  0x20,0x43,0x8a,0x2c,0x23,0xb2,0xa4,0xc9,0x8f,0xc9,0x3c,0x9e,0x5c,0x99,0xa3,0x4b,
  0x9a,0x8d,0x30,0x05,0x5d,0x88,0x49,0xd3,0x25,0x80,0x08,0x00,0x00,0x3b
  };

/* Generated by reswrap from file ErrorIcon.gif */
const unsigned char ErrorIcon[]={
  0x47,0x49,0x46,0x38,0x39,0x61,0x2a,0x00,0x28,0x00,0xb3,0x00,0x00,0xff,0xff,0xff,
  0xff,0xff,0xff,0xde,0x00,0x00,0xff,0x84,0x84,0x9c,0x9c,0x9c,0xde,0xde,0xde,0xbd,
  0xbd,0xbd,0x31,0x31,0x31,0x00,0x00,0x00,0x52,0x52,0x52,0x73,0x73,0x73,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0xf9,0x04,
  0x01,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x2a,0x00,0x28,0x00,0x00,0x04,
  0xfe,0x10,0xc8,0x49,0xeb,0x0c,0x38,0xdb,0xcd,0x7b,0xcd,0xc3,0xa0,0x79,0x24,0x99,
  0x09,0xa8,0x30,0x96,0x2c,0x85,0x0d,0x69,0x2a,0x06,0x6d,0x0d,0x60,0x71,0x8c,0xd9,
  0xec,0x9b,0xe2,0xa8,0x19,0xcf,0x14,0x90,0xf9,0x50,0xbb,0x21,0xe7,0xa8,0x3a,0x05,
  0x93,0xca,0x4f,0xf1,0x09,0xfa,0xd1,0xa2,0xae,0x00,0x0c,0x99,0x01,0x0a,0x84,0x58,
  0x89,0x77,0x66,0x20,0x14,0xb4,0xd6,0xf0,0x0d,0x8d,0x34,0x24,0x10,0x70,0xc2,0xf4,
  0x0b,0x55,0x8e,0x03,0x07,0xb8,0xbe,0xb0,0x6d,0x62,0x99,0x01,0x05,0x7a,0x7a,0x72,
  0x46,0x57,0x43,0x77,0x82,0x83,0x08,0x06,0x6c,0x7e,0x88,0x8e,0x18,0x05,0x79,0x83,
  0x67,0x73,0x60,0x36,0x77,0x18,0x0a,0x83,0x07,0x55,0x5c,0x3c,0x80,0x19,0x06,0x83,
  0x0a,0x5d,0x86,0x99,0x97,0x5d,0x05,0x6f,0x70,0x8d,0x9f,0x8f,0x3d,0x91,0x5d,0x01,
  0x9c,0x70,0x96,0x4e,0x74,0x87,0x44,0x86,0x5d,0xa4,0x08,0x09,0xb4,0xb3,0xb2,0x7d,
  0xc2,0x81,0x70,0xa6,0xc2,0xa8,0xbc,0x54,0xc2,0x71,0xc6,0xc5,0xbb,0x1b,0xa2,0xc6,
  0x79,0xaf,0xca,0x54,0x1e,0x9a,0xd5,0x8c,0xc6,0xc3,0x4b,0xb3,0xde,0x09,0x07,0xb8,
  0xd8,0xba,0xe0,0xbd,0xde,0xea,0xa2,0xd3,0xe1,0xde,0x65,0xe5,0xe6,0x98,0x17,0xaa,
  0xef,0x94,0x08,0x72,0xde,0xd1,0x52,0xd1,0xc6,0x93,0x8b,0xd7,0xe4,0xd5,0xd9,0x26,
  0xec,0xd7,0xa0,0x7c,0xd0,0xd2,0x88,0x71,0x27,0xec,0xdf,0xa0,0x80,0x02,0xaf,0x10,
  0x34,0x66,0xe0,0x1e,0x42,0x7d,0x69,0xa8,0xad,0x0b,0x40,0xc0,0xcc,0x46,0x82,0x24,
  0x3a,0x3e,0x8a,0x3c,0x65,0xc5,0x4b,0x8e,0x93,0x28,0x53,0xaa,0xec,0xd2,0x47,0xa5,
  0xcb,0x97,0xe9,0x4c,0xc2,0x9c,0x99,0xa3,0xcb,0x9a,0x91,0x38,0xd5,0xd1,0xcb,0xc9,
  0x73,0x44,0x04,0x00,0x00,0x3b
  };

/* Generated by reswrap from file QuestionIcon.gif */
const unsigned char QuestionIcon[]={
  0x47,0x49,0x46,0x38,0x39,0x61,0x2a,0x00,0x28,0x00,0xf7,0x00,0x00,0xff,0xff,0xff,
  0xde,0x00,0x00,0xff,0x84,0x84,0xff,0xff,0xff,0xd8,0x88,0x33,0x00,0x00,0x00,0x33,
  0x88,0xd8,0xff,0xd8,0x88,0x33,0x00,0x00,0x00,0x00,0x33,0x88,0xd8,0xff,0xff,0xb0,
  0x88,0xff,0xb0,0x5e,0x33,0x00,0x5e,0xb0,0xff,0xff,0xb0,0x5e,0x00,0xff,0xff,0xb0,
  0x5e,0x00,0x00,0x00,0x5e,0xb0,0x00,0x00,0x5e,0xff,0xff,0xd8,0x88,0x33,0x00,0x5e,
  0xb0,0xff,0x00,0x33,0x88,0xd8,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0xf9,0x04,
  0x01,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x2a,0x00,0x28,0x00,0x00,0x08,
  0xfe,0x00,0x01,0x08,0x1c,0x48,0xb0,0xe0,0xc0,0x01,0x08,0x13,0x1a,0x5c,0xc8,0xb0,
  0x61,0xc1,0x84,0x02,0x04,0x28,0x74,0x48,0x91,0x62,0xc2,0x00,0x18,0x03,0x4c,0xac,
  0xc8,0x91,0x20,0x42,0x01,0x19,0x33,0x4a,0x1c,0xd0,0xb1,0x24,0x00,0x84,0x21,0x43,
  0x22,0x34,0xc9,0xf1,0x63,0x46,0x94,0x18,0x47,0xb2,0xb4,0x38,0x40,0xa4,0x4b,0x8c,
  0x2b,0x67,0x32,0xbc,0xa9,0xf1,0x62,0xcc,0x9c,0x3a,0x1f,0xd6,0xfc,0x09,0xf1,0x25,
  0xc9,0xa0,0x1e,0x07,0x80,0xc4,0x99,0x10,0x66,0x00,0x99,0x48,0x05,0x3a,0x1d,0xd9,
  0x74,0x69,0xcf,0xa8,0x27,0x95,0x1a,0x6d,0x3a,0x15,0xa8,0xce,0xae,0x5c,0x79,0x7a,
  0x65,0x29,0x36,0xac,0xcf,0xa7,0x63,0x4b,0x82,0x35,0xab,0x95,0xe9,0xd7,0xb6,0x3d,
  0x07,0x30,0x28,0x40,0x97,0xae,0x01,0xb0,0x33,0xc1,0x56,0x98,0xe0,0x60,0x00,0x84,
  0x08,0x74,0x13,0x28,0xb0,0x9a,0x96,0x26,0xe1,0x01,0x0f,0x0a,0x5c,0xc0,0x80,0xf0,
  0x00,0x02,0xba,0x8b,0x6d,0x1e,0xed,0xd8,0xf5,0x2f,0x5d,0x0b,0x08,0x29,0x54,0x08,
  0x3c,0xd8,0xa8,0x5a,0xb8,0x08,0x2d,0x17,0xb8,0x3b,0x40,0x73,0x5d,0xcc,0x92,0x29,
  0x0f,0x45,0x8b,0x70,0xae,0xe0,0xcc,0x9b,0x0b,0xbc,0x3e,0xdc,0x12,0x34,0x5b,0xbf,
  0x80,0x0b,0x48,0x38,0x0b,0xd5,0xe1,0x5a,0xb3,0x04,0xe8,0xf2,0x2d,0xea,0xd6,0xb7,
  0x6d,0xb6,0x96,0x77,0x73,0x4d,0xdd,0xf0,0x77,0xd8,0x07,0xaf,0xc3,0xd2,0xde,0x79,
  0xdc,0xec,0x81,0x06,0x7d,0xd9,0x32,0x37,0xe8,0x9c,0x2b,0x03,0xd2,0x6c,0xa7,0x5c,
  0x0b,0x3d,0x7c,0x7b,0x81,0x82,0xdb,0x78,0x85,0x4a,0x46,0xcf,0xde,0xf6,0xf8,0xad,
  0xed,0xd9,0x6f,0xcf,0xba,0x9e,0x6d,0xf0,0xd1,0xec,0xc5,0x97,0xbd,0xed,0x98,0xb3,
  0x7c,0xa2,0x52,0xad,0x46,0x15,0x5b,0xfd,0xc9,0x76,0x1e,0x7a,0xb4,0xed,0x87,0xde,
  0x7d,0xe0,0xa1,0x57,0x9f,0x4a,0xf1,0x45,0xe8,0x54,0x5c,0xab,0xa5,0x64,0xe1,0x85,
  0x18,0x66,0x58,0x55,0x86,0x1c,0x76,0x68,0xe1,0x80,0x13,0x7a,0x28,0x62,0x4a,0x4d,
  0x65,0x25,0xe1,0x89,0x66,0x1d,0x84,0xe2,0x8a,0x39,0x05,0x04,0x00,0x3b
  };

/* Generated by reswrap from file InformationalIcon.gif */
const unsigned char InformationalIcon[]={
  0x47,0x49,0x46,0x38,0x39,0x61,0x2a,0x00,0x28,0x00,0xf7,0x00,0x00,0xff,0xff,0xff,
  0xff,0xff,0xff,0xde,0x00,0x00,0xff,0x84,0x84,0xc0,0xc0,0xc0,0x54,0x54,0x54,0x94,
  0x94,0x94,0xd0,0xd0,0xd0,0xb0,0xb0,0xb0,0xbf,0xbf,0xbf,0x6b,0x6b,0x6b,0xc6,0xc6,
  0xc6,0xf7,0xf7,0xf7,0xeb,0xeb,0xeb,0x9d,0x9d,0x9d,0xdd,0xdd,0xdd,0xe0,0xe0,0xe0,
  0xfa,0xfa,0xfa,0xfe,0xfe,0xfe,0xec,0xec,0xec,0xab,0xab,0xab,0xfb,0xfb,0xfb,0xe3,
  0xe3,0xe3,0xf8,0xf8,0xf8,0xdf,0xdf,0xdf,0xcc,0xcc,0xcc,0xd8,0xd8,0xd8,0xc9,0xc9,
  0xc9,0xf1,0xf1,0xf1,0xda,0xda,0xda,0xd3,0xd3,0xd3,0xde,0xde,0xde,0xca,0xca,0xca,
  0xd4,0xd4,0xd4,0xee,0xee,0xee,0xa7,0xa7,0xa7,0xcd,0xcd,0xcd,0xa1,0xa1,0xa1,0xfd,
  0xfd,0xfd,0xfc,0xfc,0xfc,0xe8,0xe8,0xe8,0x7c,0x7c,0x7c,0xf6,0xf6,0xf6,0xf2,0xf2,
  0xf2,0x8b,0x8b,0x8b,0xe4,0xe4,0xe4,0xdb,0xdb,0xdb,0xd5,0xd5,0xd5,0x7f,0x7f,0x7f,
  0xea,0xea,0xea,0x87,0x87,0x87,0xef,0xef,0xef,0xd6,0xd6,0xd6,0x88,0x88,0x88,0xe1,
  0xe1,0xe1,0xd9,0xd9,0xd9,0xc5,0xc5,0xc5,0x9e,0x9e,0x9e,0xe9,0xe9,0xe9,0xf3,0xf3,
  0xf3,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0xf9,0x04,
  0x01,0x00,0x00,0x00,0x00,0x2c,0x00,0x00,0x00,0x00,0x2a,0x00,0x28,0x00,0x00,0x08,
  0xfe,0x00,0x01,0x08,0x1c,0x48,0xb0,0xe0,0xc0,0x00,0x08,0x13,0x1a,0x5c,0xc8,0xb0,
  0x61,0xc1,0x84,0x03,0x06,0x28,0x74,0x48,0x91,0x62,0x42,0x01,0x18,0x05,0x4c,0xac,
  0xc8,0x91,0x20,0xc2,0x01,0x19,0x33,0x4a,0x0c,0xd0,0xb1,0x24,0x00,0x84,0x21,0x43,
  0x22,0x34,0xc9,0xf1,0x63,0x46,0x94,0x18,0x47,0xb2,0xb4,0x18,0x40,0xa4,0x4b,0x8c,
  0x2b,0x67,0x32,0xbc,0xa9,0xf1,0x62,0xcc,0x9c,0x3a,0x1f,0xd6,0xfc,0x09,0xf1,0x25,
  0xc9,0xa0,0x1e,0x03,0x80,0xc4,0x99,0x10,0xa6,0x00,0x99,0x48,0x05,0x3a,0x1d,0xd9,
  0x74,0x69,0xcf,0xa8,0x27,0x95,0x1a,0x6d,0x3a,0x15,0xa8,0xce,0xae,0x5c,0x79,0x7a,
  0x65,0x29,0x36,0xac,0xcf,0xa7,0x63,0x4b,0x82,0x35,0xab,0x95,0xe9,0xd7,0xb6,0x3d,
  0xd9,0x82,0x9d,0xb9,0xb6,0x81,0x8e,0xbb,0x3a,0x76,0x14,0x75,0x6b,0xb2,0x6c,0x80,
  0x1b,0x38,0x16,0x08,0x5e,0x90,0x63,0xc2,0x59,0xa8,0x1d,0xc1,0xba,0xa0,0x21,0xa1,
  0xe9,0x85,0x1a,0x36,0xca,0xaa,0x85,0x8b,0xd0,0xc5,0x0b,0xb3,0x13,0x64,0xcc,0x98,
  0xdb,0x72,0x28,0x5a,0xcb,0x72,0x2f,0xc0,0x88,0x41,0xf9,0x28,0x4d,0xab,0x01,0x1e,
  0x84,0x68,0x2c,0x77,0x05,0x8b,0x16,0x9e,0x11,0x37,0x9c,0x8a,0xe1,0x80,0x89,0x13,
  0x27,0x4c,0xe8,0xbe,0x9d,0x7b,0x37,0x8a,0x14,0x2a,0x50,0x9b,0xde,0x49,0xf9,0xc0,
  0x02,0x0f,0x1f,0x3e,0x60,0x80,0x00,0x01,0x43,0xf2,0xe5,0xcd,0x49,0x94,0x50,0x10,
  0x3b,0x6d,0x52,0x9b,0x07,0x34,0x60,0x08,0xa1,0x9c,0xb9,0xf3,0xee,0x10,0x32,0xb0,
  0x88,0x18,0x41,0x5d,0xf8,0xec,0xd2,0x07,0x20,0x04,0xe8,0xe0,0x01,0xfa,0xf7,0xe5,
  0x20,0x38,0x04,0xa0,0x40,0xbd,0xfa,0xf0,0xeb,0x44,0xd3,0x23,0xc4,0x90,0x41,0x83,
  0xff,0xff,0x1b,0xc8,0x37,0x5f,0x7d,0xe6,0x19,0xe4,0x97,0x7e,0x15,0x58,0x70,0x41,
  0x58,0x13,0x34,0x80,0x10,0x7d,0x87,0xa5,0xb5,0x96,0x7e,0x10,0x30,0xc0,0x56,0x83,
  0x03,0xee,0x75,0x55,0x52,0xc2,0x21,0x74,0xc0,0x03,0x10,0x44,0x20,0x97,0x04,0x0d,
  0x4c,0x00,0x61,0x84,0xc3,0xad,0x15,0x80,0x71,0x16,0xca,0x85,0x50,0x03,0x0e,0xd4,
  0x27,0x99,0x54,0xa5,0x25,0x74,0x00,0x02,0x09,0xe4,0xa8,0xe3,0x8e,0x3b,0x1a,0x20,
  0x23,0x67,0x2a,0x06,0x40,0x40,0x01,0x44,0x16,0x69,0xe4,0x91,0x05,0x18,0xc0,0x95,
  0x79,0x7e,0xb9,0xe8,0x64,0x58,0x36,0x9d,0x15,0xd7,0x93,0x54,0x3a,0x35,0x65,0x4a,
  0x58,0x66,0xa9,0xe5,0x96,0x5b,0xc1,0xc5,0xe5,0x97,0x60,0x52,0x25,0x25,0x98,0x64,
  0xa6,0xd4,0x54,0x56,0x55,0xa6,0x29,0xd7,0x41,0x6a,0xb6,0x79,0x26,0x00,0x01,0x01,
  0x00,0x3b
  };
#else
static FXAutoPtr<FXIcon> loadMsgIcon(const FXString &name)
{
	FXAutoPtr<FXIcon> i;
	FXString tnpath=getenv("TnHomeDir");
	if(!tnpath.empty())
	{
		tnpath.append("/icons/"+name);
		FXERRHM(i=new FXPNGIcon(FXApp::instance()));
		FXFile f(tnpath);
		f.open(IO_ReadOnly);
		FXStream s(&f);
		i->loadPixels(s);
	}
	return i;
}
#endif

const FXIcon *FXHandedMsgBox::fatalErrorIcon()
{
	static FXAutoPtr<FXIcon> myicon;
	if(!myicon)
	{
#ifdef BUILDING_TCOMMON
		myicon=loadMsgIcon("FatalErrorIcon.png");
#else
		FXERRHM(myicon=new FXGIFIcon(FXApp::instance(), FatalErrorIcon));
#endif
		myicon->create();
	}
	return PtrPtr(myicon);
}
const FXIcon *FXHandedMsgBox::errorIcon()
{
	static FXAutoPtr<FXIcon> myicon;
	if(!myicon)
	{
#ifdef BUILDING_TCOMMON
		myicon=loadMsgIcon("ErrorIcon.png");
#else
		FXERRHM(myicon=new FXGIFIcon(FXApp::instance(), ErrorIcon));
#endif
		myicon->create();
	}
	return PtrPtr(myicon);
}
const FXIcon *FXHandedMsgBox::questionIcon()
{
	static FXAutoPtr<FXIcon> myicon;
	if(!myicon)
	{
#ifdef BUILDING_TCOMMON
		myicon=loadMsgIcon("QuestionIcon.png");
#else
		FXERRHM(myicon=new FXGIFIcon(FXApp::instance(), QuestionIcon));
#endif
		myicon->create();
	}
	return PtrPtr(myicon);
}
const FXIcon *FXHandedMsgBox::informationalIcon()
{
	static FXAutoPtr<FXIcon> myicon;
	if(!myicon)
	{
#ifdef BUILDING_TCOMMON
		myicon=loadMsgIcon("InformationalIcon.png");
#else
		FXERRHM(myicon=new FXGIFIcon(FXApp::instance(), InformationalIcon));
#endif
		myicon->create();
	}
	return PtrPtr(myicon);
}

} // namespace

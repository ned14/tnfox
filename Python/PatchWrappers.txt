diff -aur old/_FXACL.cpp new/_FXACL.cpp
--- old/_FXACL.cpp	2005-09-28 17:20:08.000000000 +0100
+++ new/_FXACL.cpp	2005-09-29 11:08:43.000000000 +0100
@@ -185,7 +185,6 @@
         .def("atEnd", &FX::FXACLIterator::atEnd)
         .def( self == self )
         .def( self != self )
-        .def( *self )
         .def( self += other< FX::FXuint >() )
         .def( self -= other< FX::FXuint >() )
     ;
diff -aur old/_FXApp.cpp new/_FXApp.cpp
--- old/_FXApp.cpp	2005-09-28 17:20:12.000000000 +0100
+++ new/_FXApp.cpp	2005-09-29 11:08:43.000000000 +0100
@@ -235,10 +235,6 @@
 
 BOOST_PYTHON_MEMBER_FUNCTION_OVERLOADS(FX_FXEventLoop_flush_overloads_0_1, flush, 0, 1)
 
-BOOST_PYTHON_MEMBER_FUNCTION_OVERLOADS(FX_FXEventLoop_postAsyncMessage_overloads_2_4, postAsyncMessage, 2, 4)
-
-BOOST_PYTHON_FUNCTION_OVERLOADS(FX_FXEventLoop_postAsyncMessage_overloads_2_4, FX::FXEventLoop::postAsyncMessage, 2, 4)
-
 
 }// namespace TnFOX
 
@@ -306,12 +302,10 @@
         .def("repaint", &FX::FXEventLoop::repaint)
         .def("getDragWindow", &FX::FXEventLoop::getDragWindow, return_internal_reference< 1 >())
         .def("onCmdAsyncRecalc", (long int (FX::FXEventLoop::*)(FX::FXObject*, FX::FXSelector, void_*) )((long int (FX::FXEventLoop::*)(FX::FXObject*, FX::FXSelector, void*) )&FX::FXEventLoop::onCmdAsyncRecalc))
-        .def("postAsyncMessage", (void (FX::FXEventLoop::*)(FX::FXObject*, FX::FXuint, void_*, FX::FXObject*) )((void (FX::FXEventLoop::*)(FX::FXObject*, FX::FXuint, void*, FX::FXObject*) )&FX::FXEventLoop::postAsyncMessage), TnFOX::FX_FXEventLoop_postAsyncMessage_overloads_2_4())
-        .def("postAsyncMessage", (void (*)(FX::FXId*, FX::FXuint, void_*, FX::FXObject*))&FX::FXEventLoop::postAsyncMessage, TnFOX::FX_FXEventLoop_postAsyncMessage_overloads_2_4())
+        .def("postAsyncMessage", (void (FX::FXEventLoop::*)(FX::FXObject*, FX::FXuint, void_*, FX::FXObject*) )((void (FX::FXEventLoop::*)(FX::FXObject*, FX::FXuint, void*, FX::FXObject*) )&FX::FXEventLoop::postAsyncMessage))
         .def("requestAsyncRecalc", (void (*)(FX::FXWindow*))&FX::FXEventLoop::requestAsyncRecalc)
         .staticmethod("manufacture")
         .staticmethod("requestAsyncRecalc")
-        .staticmethod("postAsyncMessage")
     );
 
     class_< FX::FXEventLoop::FXMapEntry >("FXMapEntry", init< const FX::FXEventLoop::FXMapEntry& >())
diff -aur old/_FXApp1.cpp new/_FXApp1.cpp
--- old/_FXApp1.cpp	2005-09-28 17:20:12.000000000 +0100
+++ new/_FXApp1.cpp	2005-09-29 11:08:43.000000000 +0100
@@ -123,21 +123,6 @@
         FX::FXApp::detach();
     }
 
-    void init(int& p0, char** p1, FX::FXbool p2) {
-        FXPython_DoPython ctxhold;
-        call_method2< void >(py_self, "init", p0, ptr(p1), p2);
-    }
-
-    void default_init_2(int& p0, char** p1) {
-        FXPython_DoPython ctxhold;
-        FX::FXApp::init(p0, p1);
-    }
-
-    void default_init_3(int& p0, char** p1, FX::FXbool p2) {
-        FXPython_DoPython ctxhold;
-        FX::FXApp::init(p0, p1, p2);
-    }
-
     void exit(FX::FXint p0) {
         FXPython_DoPython ctxhold;
         call_method2< void >(py_self, "exit", p0);
@@ -266,8 +251,8 @@
         .def("create", &FX::FXApp::create, &TnFOX::FX_FXApp_Wrapper::default_create)
         .def("destroy", &FX::FXApp::destroy, &TnFOX::FX_FXApp_Wrapper::default_destroy)
         .def("detach", &FX::FXApp::detach, &TnFOX::FX_FXApp_Wrapper::default_detach)
-        .def("init", &FX::FXApp::init, &TnFOX::FX_FXApp_Wrapper::default_init_3)
-        .def("init", &TnFOX::FX_FXApp_Wrapper::default_init_2)
+        .def("init", &FXApp_init)
+        .def("init", &FXApp_init2)
         .def("exit", &FX::FXApp::exit, &TnFOX::FX_FXApp_Wrapper::default_exit_1)
         .def("exit", &TnFOX::FX_FXApp_Wrapper::default_exit_0)
         .def("save", (void (FX::FXApp::*)(FX::FXStream&) const)&FX::FXApp::save, (void (TnFOX::FX_FXApp_Wrapper::*)(FX::FXStream&) const)&TnFOX::FX_FXApp_Wrapper::default_save)
@@ -286,7 +271,7 @@
         .def("closeDisplay", &FX::FXApp::closeDisplay)
         .def("isInitialized", &FX::FXApp::isInitialized)
         .def("getArgc", &FX::FXApp::getArgc)
-        .def("getArgv", &FX::FXApp::getArgv, return_internal_reference< 1 >())
+        .def("getArgv", &FXApp_getArgv)
         .def("getPrimaryEventLoop", (FX::FXEventLoop* (*)())&FX::FXApp::getPrimaryEventLoop, return_internal_reference< 1 >())
         .def("getDefaultVisual", &FX::FXApp::getDefaultVisual, return_internal_reference< 1 >())
         .def("setDefaultVisual", &FX::FXApp::setDefaultVisual)
diff -aur old/_FXBitmap.cpp new/_FXBitmap.cpp
--- old/_FXBitmap.cpp	2005-09-28 17:20:21.000000000 +0100
+++ new/_FXBitmap.cpp	2005-09-29 11:08:43.000000000 +0100
@@ -297,7 +297,7 @@
         .def("onDefault", (long int (FX::FXObject::*)(FX::FXObject*, FX::FXSelector, void_*) )((long int (FX::FXObject::*)(FX::FXObject*, FX::FXSelector, void*) )&FX::FXObject::onDefault), &TnFOX::FX_FXBitmap_Wrapper::default_onDefault)
         .def("tryHandle", (long int (FX::FXObject::*)(FX::FXObject*, FX::FXSelector, void_*) )((long int (FX::FXObject::*)(FX::FXObject*, FX::FXSelector, void*) )&FX::FXObject::tryHandle), &TnFOX::FX_FXBitmap_Wrapper::default_tryHandle)
         .def("manufacture", (FX::FXObject* (*)())&FX::FXBitmap::manufacture, return_value_policy< manage_new_object >())
-        .def("getData", &FX::FXBitmap::getData, return_internal_reference< 1 >())
+        .def("getData", &FXBitmap_getData)
         .def("getOptions", &FX::FXBitmap::getOptions)
         .def("setOptions", &FX::FXBitmap::setOptions)
         .def("getPixel", &FX::FXBitmap::getPixel)
diff -aur old/_FXFile.cpp new/_FXFile.cpp
--- old/_FXFile.cpp	2005-09-28 17:52:07.000000000 +0100
+++ new/_FXFile.cpp	2005-09-29 11:11:35.000000000 +0100
@@ -265,7 +265,7 @@
         .def("remove", (bool (FX::FXFile::*)() )&FX::FXFile::remove)
         .def("reloadSize", &FX::FXFile::reloadSize)
         .def("stdio", (FX::QIODevice& (*)(bool))&FX::FXFile::stdio, return_internal_reference< 1 >(), TnFOX::FX_FXFile_stdio_overloads_0_1())
-        .def("permissions", (FX::FXACL (*)(const FX::FXString&))&FX::FXFile::permissions, return_internal_reference< 1 >())
+        .def("permissions", (FX::FXACL (*)(const FX::FXString&))&FX::FXFile::permissions)
         .def("setPermissions", (void (*)(const FX::FXString&, const FX::FXACL&))&FX::FXFile::setPermissions)
         .def("join", (FX::FXString (*)(const FX::FXString&, const FX::FXString&))&FX::FXFile::join)
         .def("join", (FX::FXString (*)(const FX::FXString&, const FX::FXString&, const FX::FXString&))&FX::FXFile::join)
@@ -329,7 +329,7 @@
         .def("owner", (FX::FXString (*)(const FX::FXString&))&FX::FXFile::owner)
         .def("group", (FX::FXString (*)(FX::FXuint))&FX::FXFile::group)
         .def("group", (FX::FXString (*)(const FX::FXString&))&FX::FXFile::group)
-        .def("permissions", (FX::FXString (*)(FX::FXuint))&FX::FXFile::permissions, return_internal_reference< 1 >())
+        .def("permissions", (FX::FXString (*)(FX::FXuint))&FX::FXFile::permissions)
         .def("size", (FX::FXfval (*)(const FX::FXString&))&FX::FXFile::size)
         .def("modified", (FX::FXTime (*)(const FX::FXString&))&FX::FXFile::modified)
         .def("accessed", (FX::FXTime (*)(const FX::FXString&))&FX::FXFile::accessed)
diff -aur old/_FXFont.cpp new/_FXFont.cpp
--- old/_FXFont.cpp	2005-09-28 17:23:31.000000000 +0100
+++ new/_FXFont.cpp	2005-09-29 11:08:44.000000000 +0100
@@ -232,7 +232,7 @@
     delete FX_FXFont_scope;
 
     class_< FX::FXFontDesc >("FXFontDesc", init< const FX::FXFontDesc& >())
-        .add_property("face", make_getter(&FX::FXFontDesc::face, return_value_policy<return_by_value>()), make_setter(&FX::FXFontDesc::face, return_value_policy<return_by_value>()))
+        .add_property("face", make_getter((char *(FXFontDesc::*)) &FX::FXFontDesc::face, return_value_policy<return_by_value>()), make_setter((char *(FXFontDesc::*)) &FX::FXFontDesc::face, return_value_policy<return_by_value>()))
         .add_property("size", make_getter(&FX::FXFontDesc::size, return_value_policy<return_by_value>()), make_setter(&FX::FXFontDesc::size, return_value_policy<return_by_value>()))
         .add_property("weight", make_getter(&FX::FXFontDesc::weight, return_value_policy<return_by_value>()), make_setter(&FX::FXFontDesc::weight, return_value_policy<return_by_value>()))
         .add_property("slant", make_getter(&FX::FXFontDesc::slant, return_value_policy<return_by_value>()), make_setter(&FX::FXFontDesc::slant, return_value_policy<return_by_value>()))
diff -aur old/_FXFunctorTarget.cpp new/_FXFunctorTarget.cpp
--- old/_FXFunctorTarget.cpp	2005-09-28 17:23:50.000000000 +0100
+++ new/_FXFunctorTarget.cpp	2005-09-29 11:08:44.000000000 +0100
@@ -124,7 +124,6 @@
 {
     scope* FX_FXFunctorTarget_scope = new scope(
     class_< FX::FXFunctorTarget, bases< FX::FXObject > , boost::noncopyable, std::auto_ptr<TnFOX::FX_FXFunctorTarget_Wrapper> >("FXFunctorTarget", init<  >())
-        .def(init< FX::Generic::Functor<FX::Generic::TL::item<long int, FX::Generic::TL::item<FX::FXObject*, FX::Generic::TL::item<unsigned int, FX::Generic::TL::item<void*, FX::Generic::NullType> > > > > >())
         .def("handle", (long int (FX::FXFunctorTarget::*)(FX::FXObject*, FX::FXSelector, void_*) )((long int (FX::FXFunctorTarget::*)(FX::FXObject*, FX::FXSelector, void*) )&FX::FXFunctorTarget::handle), (long int (TnFOX::FX_FXFunctorTarget_Wrapper::*)(FX::FXObject*, FX::FXSelector, void_*))&TnFOX::FX_FXFunctorTarget_Wrapper::default_handle)
         .def("getMetaClass", (const FX::FXMetaClass* (FX::FXFunctorTarget::*)() const)&FX::FXFunctorTarget::getMetaClass, (const FX::FXMetaClass* (TnFOX::FX_FXFunctorTarget_Wrapper::*)() const)&TnFOX::FX_FXFunctorTarget_Wrapper::default_getMetaClass, return_internal_reference< 1 >())
         .def("onDefault", (long int (FX::FXObject::*)(FX::FXObject*, FX::FXSelector, void_*) )((long int (FX::FXObject::*)(FX::FXObject*, FX::FXSelector, void*) )&FX::FXObject::onDefault), &TnFOX::FX_FXFunctorTarget_Wrapper::default_onDefault)
diff -aur old/_FXGLCanvas.cpp new/_FXGLCanvas.cpp
--- old/_FXGLCanvas.cpp	2005-09-28 17:24:07.000000000 +0100
+++ new/_FXGLCanvas.cpp	2005-09-29 11:08:44.000000000 +0100
@@ -573,7 +573,7 @@
         .def("doesSaveUnder", &FX::FXWindow::doesSaveUnder, &TnFOX::FX_FXGLCanvas_Wrapper::default_doesSaveUnder)
         .def("manufacture", (FX::FXObject* (*)())&FX::FXGLCanvas::manufacture, return_value_policy< manage_new_object >())
         .def("isShared", &FX::FXGLCanvas::isShared)
-        .def("getCurrentContext", (void* (*)())&FX::FXGLCanvas::getCurrentContext, return_value_policy< return_opaque_pointer >())
+        .def("getCurrentContext", (void_* (*)())&FX::FXGLCanvas::getCurrentContext, return_value_policy< return_opaque_pointer >())
         .staticmethod("manufacture")
         .staticmethod("getCurrentContext")
     );
diff -aur old/_FXGLTriangleMesh.cpp new/_FXGLTriangleMesh.cpp
--- old/_FXGLTriangleMesh.cpp	2005-09-28 17:24:58.000000000 +0100
+++ new/_FXGLTriangleMesh.cpp	2005-09-29 11:08:44.000000000 +0100
@@ -242,13 +242,13 @@
         .def("setVertexNumber", &FX::FXGLTriangleMesh::setVertexNumber)
         .def("getVertexNumber", &FX::FXGLTriangleMesh::getVertexNumber)
         .def("setVertexBuffer", &FX::FXGLTriangleMesh::setVertexBuffer)
-        .def("getVertexBuffer", &FX::FXGLTriangleMesh::getVertexBuffer, return_internal_reference< 1 >())
+        .def("getVertexBuffer", &FXGLTriangleMesh_getVertexBuffer)
         .def("setColorBuffer", &FX::FXGLTriangleMesh::setColorBuffer)
-        .def("getColorBuffer", &FX::FXGLTriangleMesh::getColorBuffer, return_internal_reference< 1 >())
+        .def("getColorBuffer", &FXGLTriangleMesh_getColorBuffer)
         .def("setNormalBuffer", &FX::FXGLTriangleMesh::setNormalBuffer)
-        .def("getNormalBuffer", &FX::FXGLTriangleMesh::getNormalBuffer, return_internal_reference< 1 >())
+        .def("getNormalBuffer", &FXGLTriangleMesh_getNormalBuffer)
         .def("setTextureCoordBuffer", &FX::FXGLTriangleMesh::setTextureCoordBuffer)
-        .def("getTextureCoordBuffer", &FX::FXGLTriangleMesh::getTextureCoordBuffer, return_internal_reference< 1 >())
+        .def("getTextureCoordBuffer", &FXGLTriangleMesh_getTextureCoordBuffer)
         .staticmethod("manufacture")
     );
 
diff -aur old/_FXGLViewer1.cpp new/_FXGLViewer1.cpp
--- old/_FXGLViewer1.cpp	2005-09-28 17:25:06.000000000 +0100
+++ new/_FXGLViewer1.cpp	2005-09-29 11:08:44.000000000 +0100
@@ -159,11 +159,6 @@
         return call_method2< FX::FXGLObject** >(py_self, "select", p0, p1, p2, p3);
     }
 
-    FX::FXGLObject** default_select(FX::FXint p0, FX::FXint p1, FX::FXint p2, FX::FXint p3) {
-        FXPython_DoPython ctxhold;
-        return FX::FXGLViewer::select(p0, p1, p2, p3);
-    }
-
     FX::FXGLObject* pick(FX::FXint p0, FX::FXint p1) {
         FXPython_DoPython ctxhold;
         return call_method2< FX::FXGLObject* >(py_self, "pick", p0, p1);
@@ -605,7 +600,7 @@
         .def("create", (void (FX::FXGLViewer::*)() )&FX::FXGLViewer::create, (void (TnFOX::FX_FXGLViewer_Wrapper::*)())&TnFOX::FX_FXGLViewer_Wrapper::default_create)
         .def("detach", (void (FX::FXGLViewer::*)() )&FX::FXGLViewer::detach, (void (TnFOX::FX_FXGLViewer_Wrapper::*)())&TnFOX::FX_FXGLViewer_Wrapper::default_detach)
         .def("layout", (void (FX::FXGLViewer::*)() )&FX::FXGLViewer::layout, (void (TnFOX::FX_FXGLViewer_Wrapper::*)())&TnFOX::FX_FXGLViewer_Wrapper::default_layout)
-        .def("select", &FX::FXGLViewer::select, &TnFOX::FX_FXGLViewer_Wrapper::default_select, return_value_policy< manage_new_object >())
+        .def("select", &FXGLViewer_select, return_value_policy< manage_new_object >())
         .def("pick", &FX::FXGLViewer::pick, &TnFOX::FX_FXGLViewer_Wrapper::default_pick, return_internal_reference< 1 >())
         .def("setBounds", &FX::FXGLViewer::setBounds, &TnFOX::FX_FXGLViewer_Wrapper::default_setBounds)
         .def("save", (void (FX::FXGLViewer::*)(FX::FXStream&) const)&FX::FXGLViewer::save, (void (TnFOX::FX_FXGLViewer_Wrapper::*)(FX::FXStream&) const)&TnFOX::FX_FXGLViewer_Wrapper::default_save)
@@ -744,7 +739,7 @@
         .def("onQueryTip", (long int (FX::FXGLViewer::*)(FX::FXObject*, FX::FXSelector, void_*) )((long int (FX::FXGLViewer::*)(FX::FXObject*, FX::FXSelector, void*) )&FX::FXGLViewer::onQueryTip))
         .def("worldPix", &FX::FXGLViewer::worldPix)
         .def("modelPix", &FX::FXGLViewer::modelPix)
-        .def("lasso", &FX::FXGLViewer::lasso, return_value_policy< manage_new_object >())
+        .def("lasso", &FXGLViewer_lasso, return_value_policy< manage_new_object >())
         .def("fitToBounds", &FX::FXGLViewer::fitToBounds)
         .def("getViewport", &FX::FXGLViewer::getViewport)
         .def("eyeToScreen", &FX::FXGLViewer::eyeToScreen)
diff -aur old/_FXIPC.cpp new/_FXIPC.cpp
--- old/_FXIPC.cpp	2005-09-28 17:52:11.000000000 +0100
+++ new/_FXIPC.cpp	2005-09-29 11:12:51.000000000 +0100
@@ -60,13 +60,12 @@
     }
 
     void run() {
-        FXPython_DoPython ctxhold;
-        call_method2< void >(py_self, "run");
+		FXPython::int_runPythonThread(py_self, this);
     }
 
     void* cleanup() {
         FXPython_DoPython ctxhold;
-        return call_method2< void* >(py_self, "cleanup");
+        return (void *) call_method2< int >(py_self, "cleanup");
     }
 
     void *getPythonObject() const {
@@ -140,7 +139,6 @@
     class_< FX::FXIPCMsgRegistry, boost::noncopyable >("FXIPCMsgRegistry", init<  >())
         .def("isValid", &FX::FXIPCMsgRegistry::isValid)
         .def("lookup", (bool (FX::FXIPCMsgRegistry::*)(FX::FXuint) const)&FX::FXIPCMsgRegistry::lookup)
-        .def("lookup", (bool (FX::FXIPCMsgRegistry::*)(void (*)(FX::FXIPCMsg*, FX::FXStream&)&, FX::FXIPCMsg* (*)()&, void (*)(FX::FXIPCMsg*)&, FX::FXuint) const)&FX::FXIPCMsgRegistry::lookup)
         .def("decodeType", &FX::FXIPCMsgRegistry::decodeType, return_value_policy< copy_const_reference >())
     ;
 
diff -aur old/_FXImage.cpp new/_FXImage.cpp
--- old/_FXImage.cpp	2005-09-28 17:26:20.000000000 +0100
+++ new/_FXImage.cpp	2005-09-29 11:12:51.000000000 +0100
@@ -416,7 +416,7 @@
         .def("manufacture", (FX::FXObject* (*)())&FX::FXImage::manufacture, return_value_policy< manage_new_object >())
         .def("setOptions", &FX::FXImage::setOptions)
         .def("getOptions", &FX::FXImage::getOptions)
-        .def("getData", &FX::FXImage::getData, return_internal_reference< 1 >())
+        .def("getData", &FXImage_getData)
         .def("getPixel", &FX::FXImage::getPixel)
         .def("setPixel", &FX::FXImage::setPixel)
         .def("hasAlpha", &FX::FXImage::hasAlpha)
diff -aur old/_FXObjectList.cpp new/_FXObjectList.cpp
--- old/_FXObjectList.cpp	2005-09-28 17:28:37.000000000 +0100
+++ new/_FXObjectList.cpp	2005-09-29 11:13:52.000000000 +0100
@@ -37,8 +37,7 @@
         .def("no", (FX::FXint (FX::FXObjectList::*)() const)&FX::FXObjectList::no)
         .def("no", (void (FX::FXObjectList::*)(FX::FXint) )&FX::FXObjectList::no)
         .def("list", (FX::FXObject*& (FX::FXObjectList::*)(FX::FXint) )&FX::FXObjectList::list, return_internal_reference< 1 >())
-        .def("list", (const FX::FXObject*& (FX::FXObjectList::*)(FX::FXint) const)&FX::FXObjectList::list, return_internal_reference< 1 >())
-        .def("list", (FX::FXObject** (FX::FXObjectList::*)() const)&FX::FXObjectList::list, return_internal_reference< 1 >())
+        .def("list", FXObjectList_list)
         .def("assign", (FX::FXObjectList& (FX::FXObjectList::*)(FX::FXObject*) )&FX::FXObjectList::assign, return_self<>())
         .def("assign", (FX::FXObjectList& (FX::FXObjectList::*)(FX::FXObject**, FX::FXint) )&FX::FXObjectList::assign, return_self<>())
         .def("assign", (FX::FXObjectList& (FX::FXObjectList::*)(FX::FXObjectList&) )&FX::FXObjectList::assign, return_self<>())
diff -aur old/_FXProcess.cpp new/_FXProcess.cpp
--- old/_FXProcess.cpp	2005-09-28 17:29:41.000000000 +0100
+++ new/_FXProcess.cpp	2005-09-29 11:18:40.000000000 +0100
@@ -50,7 +50,7 @@
 
     bool create(int& p0, char** p1, FX::FXStream& p2) {
         FXPython_DoPython ctxhold;
-        return call_method2< bool >(py_self, "create", p0, ptr(p1), p2);
+        return call_method2< bool >(py_self, "create", p0, p1, p2);
     }
 
     void destroy() {
@@ -75,8 +75,6 @@
 
 BOOST_PYTHON_FUNCTION_OVERLOADS(FX_FXProcess_exit_overloads_0_1, FX::FXProcess::exit, 0, 1)
 
-BOOST_PYTHON_FUNCTION_OVERLOADS(FX_FXProcess_dllPath_overloads_1_3, FX::FXProcess::dllPath, 1, 3)
-
 BOOST_PYTHON_FUNCTION_OVERLOADS(FX_FXProcess_hostOSMemoryLoad_overloads_0_1, FX::FXProcess::hostOSMemoryLoad, 0, 1)
 
 BOOST_PYTHON_FUNCTION_OVERLOADS(FX_FXProcess_overrideFreeResources_overloads_0_3, FX::FXProcess::overrideFreeResources, 0, 3)
@@ -118,7 +116,6 @@
         .def("pageSize", (FX::FXuint (*)())&FX::FXProcess::pageSize)
         .def("mappedFiles", (FX::QValueList<FX::FXProcess::MappedFileInfo> (*)())&FX::FXProcess::mappedFiles)
         .def("execpath", (const FX::FXString& (*)())&FX::FXProcess::execpath, return_value_policy< copy_const_reference >())
-        .def("dllPath", (FX::FXString (*)(void_*, void_**, void_**))&FX::FXProcess::dllPath, TnFOX::FX_FXProcess_dllPath_overloads_1_3())
         .def("dllLoad", (FX::FXProcess::dllHandle (*)(const FX::FXString&))&FX::FXProcess::dllLoad)
         .def("dllUnload", (void (*)(FX::FXProcess::dllHandle&))&FX::FXProcess::dllUnload)
         .def("hostOS", (FX::FXString (*)())&FX::FXProcess::hostOS)
@@ -150,7 +147,6 @@
         .def("int_addStaticDepend", (void (*)(FX::FXProcess_StaticDepend*))&FX::FXProcess::int_addStaticDepend)
         .staticmethod("overrideFreeResources")
         .staticmethod("hostOSDescription")
-        .staticmethod("dllPath")
         .staticmethod("int_addStaticDepend")
         .staticmethod("overrideUserHandedness")
         .staticmethod("hostOSDiskIOLoad")
diff -aur old/_QIODevice.cpp new/_QIODevice.cpp
--- old/_QIODevice.cpp	2005-09-28 17:52:18.000000000 +0100
+++ new/_QIODevice.cpp	2005-09-29 11:24:59.000000000 +0100
@@ -120,6 +120,9 @@
         FX::QIODevice::setPermissions(p0);
     }
 
+    FX::FXuval readBlock(char* p0, FX::FXuval p1) { return 0; }
+    FX::FXuval readBlockFrom(char* p0, FX::FXuval p1, FX::FXfval p2) { return 0; }
+
     FX::FXuval writeBlock(const char* p0, FX::FXuval p1) {
         FXPython_DoPython ctxhold;
         return call_method2< FX::FXuval >(py_self, "writeBlock", p0, p1);
diff -aur old/_QIODeviceS.cpp new/_QIODeviceS.cpp
--- old/_QIODeviceS.cpp	2005-09-28 17:52:19.000000000 +0100
+++ new/_QIODeviceS.cpp	2005-09-29 11:25:46.000000000 +0100
@@ -95,6 +95,9 @@
         return FX::QIODeviceS::atEnd();
     }
 
+    FX::FXuval readBlock(char* p0, FX::FXuval p1) { return 0; }
+    FX::FXuval readBlockFrom(char* p0, FX::FXuval p1, FX::FXfval p2) { return 0; }
+
     FX::FXuval writeBlockTo(FX::FXfval p0, const char* p1, FX::FXuval p2) {
         FXPython_DoPython ctxhold;
         return call_method2< FX::FXuval >(py_self, "writeBlockTo", p0, p1, p2);
@@ -213,7 +216,7 @@
         .def("size", pure_virtual(&FX::QIODevice::size))
         .def("permissions", &FX::QIODevice::permissions, &TnFOX::FX_QIODeviceS_Wrapper::default_permissions, return_internal_reference< 1 >())
         .def("setPermissions", &FX::QIODevice::setPermissions, &TnFOX::FX_QIODeviceS_Wrapper::default_setPermissions)
-        .def("writeBlock", pure_virtual(&FX::QIODevice::writeBlock))
+        .def("writeBlock", pure_virtual((FX::FXuval (FX::QIODevice::*)(const char*, FX::FXuval) )&FX::QIODevice::writeBlock))
         .def("getch", &FX::QIODevice::getch, &TnFOX::FX_QIODeviceS_Wrapper::default_getch)
         .def("putch", &FX::QIODevice::putch, &TnFOX::FX_QIODeviceS_Wrapper::default_putch)
         .def("ungetch", pure_virtual(&FX::QIODevice::ungetch))
diff -aur old/_QMemMap.cpp new/_QMemMap.cpp
--- old/_QMemMap.cpp	2005-09-28 17:56:41.000000000 +0100
+++ new/_QMemMap.cpp	2005-09-29 11:13:52.000000000 +0100
@@ -268,7 +268,7 @@
         .def("mapOut", (void (FX::QMemMap::*)(FX::FXfval, FX::FXfval) )&FX::QMemMap::mapOut, TnFOX::FX_QMemMap_mapOut_overloads_0_2())
         .def("mapOut", (void (FX::QMemMap::*)(void_*) )((void (FX::QMemMap::*)(void*) )&FX::QMemMap::mapOut))
         .def("mappedRegion", &FX::QMemMap::mappedRegion, TnFOX::FX_QMemMap_mappedRegion_overloads_1_3())
-        .def("permissions", (FX::FXACL (*)(const FX::FXString&))&FX::QMemMap::permissions, return_internal_reference< 1 >())
+        .def("permissions", (FX::FXACL (*)(const FX::FXString&))&FX::QMemMap::permissions)
         .def("setPermissions", (void (*)(const FX::FXString&, const FX::FXACL&))&FX::QMemMap::setPermissions)
         .staticmethod("setPermissions")
         .staticmethod("permissions")
diff -aur old/_QPipe.cpp new/_QPipe.cpp
--- old/_QPipe.cpp	2005-09-28 17:56:42.000000000 +0100
+++ new/_QPipe.cpp	2005-09-29 11:18:05.000000000 +0100
@@ -274,7 +274,7 @@
         .def("isUnique", &FX::QPipe::isUnique)
         .def("setUnique", &FX::QPipe::setUnique)
         .def("reset", &FX::QPipe::reset)
-        .def("permissions", (FX::FXACL (*)(const FX::FXString&))&FX::QPipe::permissions, return_internal_reference< 1 >())
+        .def("permissions", (FX::FXACL (*)(const FX::FXString&))&FX::QPipe::permissions)
         .def("setPermissions", (void (*)(const FX::FXString&, const FX::FXACL&))&FX::QPipe::setPermissions)
         .def("maxAtomicLength", &FX::QPipe::maxAtomicLength)
         .staticmethod("setPermissions")
diff -aur old/_QThread.cpp new/_QThread.cpp
--- old/_QThread.cpp	2005-09-28 17:52:26.000000000 +0100
+++ new/_QThread.cpp	2005-09-29 11:14:13.000000000 +0100
@@ -64,13 +64,12 @@
     }
 
     void run() {
-        FXPython_DoPython ctxhold;
-        call_method2< void >(py_self, "run");
+		FXPython::int_runPythonThread(py_self, this);
     }
 
     void* cleanup() {
         FXPython_DoPython ctxhold;
-        return call_method2< void* >(py_self, "cleanup");
+        return (void *) call_method2< int >(py_self, "cleanup");
     }
 
     void *getPythonObject() const {

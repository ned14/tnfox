Platform-specific issues:
-=-=-=-=-=-=-=-=-=-=-=-=-
* Regenerate python bindings on all platforms
* Update web page + completed listing + write release email
* Lots of testing with release builds
* Release!
* If have time, release ptmalloc2


NT v5.0 Failures:
  None known.

Linux Kernel v2.4.20 (RH9) Failures:
  None known, but thread cancellation during pipe operations is a little flaky
in Tn (see the cleanup() in FXIPCChannel).

Linux Kernel v2.6.10 Failures:
  1. TestMultithreading, there is a segfault as the threads quit in sem_post()
in glibc but ONLY when being used as a shared library. As this doesn't happen
on other platforms or when built statically, it's likely an OS bug.

FreeBSD v5.3 Failures:
  1. TestFSMonitor, the FAM daemon uses polling on BSD and thus the test's
timings are off - therefore the events don't open as they should.

Known bugs:
-=-=-=-=-=-
* FXSSLDevice throws a "bad decrypt" exception on close() with Blowfish
with certain key lengths. The cause is currently unknown.
* Valgrind complains about how we fake a primary thread object. It also doesn't
like the marker test FXMemoryPool's global allocator operators perform to detect
which blocks belong to the system allocator.
* TestGeneric fails to compile with GCC
* FXLocalPipe has some problem when running under FXSSLDevice. Will investigate
later.
* TestPython on exit fails with a segfault on all platforms. This appears to be
due to a bad memory block free.
* TnFOX and Intel's C++ compiler for Linux currently don't play nice. You'll
get a segfault in _ZNSt6_WinitC9Ev in libcprts.so which suggests it's TnFOX's
redefinition of the global new operator to be the cause (this means it's a bug
in ICC).


Coming shortly:
-=-=-=-=-=-=-=-
* Test custodian & ward policies in python bindings to try and solve
FXWindow children being deleted twice problem
* Get FXTrans to run per-thread locales
* Have FXPacker dynamically cause horizontally packed items to go
vertical if there isn't enough space (small screen support)
* Add test of new sort function capability to TestPython
* Add comprehensive test of all security facilities ensuring it very
hard to compromise secure data
* Have FXMutex spin only when current owner is on different processor
to requester (hard as threads can shift processor suddenly)

Eventually:
-=-=-=-=-=-
* FXBlkSocket::writeBlock() for UDP
* Move all my stuff over to use FXWString (when FOX does so too)
* Temp string additions to FXString (use templates?)
* Currency and time formatting extensions to FXTrans (needs more std support
though - maybe those extended GNU functions or <locale>?)
* Have python bindings extract argc & argv before instantiating FXProcess

Other:
* MSVC doesn't make temporaries const which is very useful for implementing
copy constructors which actually move. GCC however is more strict and
does make them const, thus breaking this semantic.
   We're really waiting for move constructors to be added to the ISO C++ spec,
this will take a few years if based on past experience. Defining
HAVE_MOVECONSTRUCTORS enables the proposed syntax.
   Until then, HAVE_CONSTTEMPORARIES when defined makes the copy constructors
take a const reference even though in fact it modifies the original.
